{"version":3,"sources":["data sync /^/.//.*$","data/gor:0x79860c21220938a249a26ddc4616adf18efce5cf.js","App.js","views/Networks.js","helpers/readable.js","views/Liquidity.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","process","console","log","JSON","stringify","App","className","style","color","data-tf-popup","data-tf-size","data-tf-iframe-props","data-tf-medium","to","target","href","Networks","input","entries","key","value","erc20abi","Liquidity","network","networkData","require","addressParam","useParams","tokenData","symbol","default","useState","data","setData","zillowData","tokenInfo","setTokenInfo","loading","setLoading","provider","ethers","getDefaultProvider","alchemy","stable","addresses","StableContract","Contract","AssetContract","getTokenInfo","useCallback","a","stableSymbol","assetSymbol","getData","queryFactoryForLPUniV3","uniswapFactory","lpAddresses","Promise","all","address","getPriceUniswapV3","newData","useEffect","tokenFetch","dataFetch","tip","size","Title","level","showFullscreenButton","showPlayButton","originalWidth","renderRightNav","onClick","disabled","renderLeftNav","items","images","image","original","thumbnail","percent","success","showInfo","title","open","placement","message","type","readable","filter","asset","Number","token0Reserves","token1Reserves","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.60a9e0cc.chunk.js","sourcesContent":["var map = {\n\t\"./goerli\": 168,\n\t\"./goerli.json\": 168,\n\t\"./gor:0x79860c21220938a249a26ddc4616adf18efce5cf\": 169,\n\t\"./gor:0x79860c21220938a249a26ddc4616adf18efce5cf.js\": 169\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","export default {\n    \"network\": \"goerli\",\n    \"rentalLinks\": [\"airbnb.com/rooms/805215032461605366\"],\n    \"address\": \"330 W 600 S, Provo, UT 84601\",\n    \"images\": [\"https://a0.muscache.com/im/pictures/miso/Hosting-805215032461605366/original/dae9af77-2d84-495d-8d56-b26a41ede527.jpeg?im_w=1200\",\"https://a0.muscache.com/im/pictures/miso/Hosting-805215032461605366/original/bcd6957b-c705-4881-9849-ac093f52ccd1.jpeg\"],\n    \"metaDataNft\": \"https://testnets.opensea.io/assets/goerli/0xf4910c763ed4e47a585e2d34baa9a4b611ae448c/27227242129820536659421687614693823327255596489314134975922313044262620495972\",\n    \"legalNft\": \"https://testnets.opensea.io/assets/goerli/0x5b9ae6234cf1e447680c245200e066091e631bf3/186\",\n    \"airbnbData\": `https://api.apify.com/v2/datasets/73bFeNE8plMtyq4gg/items?token=apify_api_${process.env.REACT_APP_APIFY_KEY}`\n}","import React from 'react'\nimport './App.css';\nimport './shorthand.css';\nimport \"react-image-gallery/styles/css/image-gallery.css\"\nimport { Link } from \"react-router-dom\";\n\nconsole.log(`${process.env.REACT_APP_VERSION} ${JSON.stringify(process.env)}`)\n\nfunction App() {\n  return (\n    <div className=\"full-screen-center text-align-center\">\n      <div className=\"m20\">\n        L <span style={{color:\"red\"}}>Â£</span> G T\n        <br></br>\n        <p className='text-medium text-gray'>\n          legal governance tokens\n          <br></br>\n          defi protocol\n          collateralizing real world assets\n          <br></br>\n          <br></br>\n        </p>\n        <div className='text-medium text-gray'>\n          <div>handles real world cataclystic events</div>\n          <div>applies jurisdictional compliance</div>\n          <div>resolve on-chain disputes</div>\n          <div>new financial products</div>\n        </div>\n          <div className=\"m30\"></div>\n          <div className=\"mb60\">\n            <button data-tf-popup=\"FUQh12hl\" data-tf-size=\"70\" data-tf-iframe-props=\"title=Mint Questionaire\" data-tf-medium=\"snippet\" >Start Mint</button>\n            <div className=\"m10\"></div>\n            <div className=\"m10\"></div>\n            <Link to='https://testnets.opensea.io/LGTNFT'><button>NFT Examples</button></Link>\n            <div className=\"m10\"></div>\n            <Link to='/liquidity/0x79860c21220938a249a26ddc4616adf18efce5cf'><button>Liquidity Example</button></Link>\n            <div className=\"m10\"></div>\n          </div>\n        <div className='text-medium text-gray-light'>v{process.env.REACT_APP_VERSION}</div>\n        <a target=\"blank\" className=\"underline text-medium text-gray\" href=\"https://legt.gitbook.io\">View Documentation</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction Networks() {\n    return (\n        <div className=\"full-screen-center text-align-center\">\n            <div className=\"m20\">\n                Goerli\n                <div></div>\n                <div className='mt40 text-align-center text-medium text-gray'>\n                    <p><a href=\"https://goerli.etherscan.io/address/0x4Fd10Cb0969776029AefA8B5CDfba584C0778D97\">DAO</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0xf0a711a6cedc873ed978831bd76d0d647db3486006d6aa8509686962a48bd08a\">Asset</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0xc67b39f054c0eb67dafda95bdf1d69f3f3378895b6f9291b5910d3cd66649ac8\">Stable Token</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/token/0x9cefe40f0cf6fa1e18ca0507ce8f26ee6bec05df\">NFT Factory</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0x16014122ea63ddb438ba43586934905aad63c6c97f0c71400526543cdf11b6b1\">Liquidity Pool</a><a href=\"https://app.uniswap.org/#/pool/47647\">âï¸</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/address/0x1be39aef1192ac142698f0979031265b23b8fd58\">Distrobution Wrapper</a></p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Networks;\n","import React from 'react'\nexport default function (input){\n    return Object.entries(input).map(([key, value]) => \n        <p key={key}>{`${key}: ${value}`}</p>)\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { ethers } from \"ethers\";\nimport addresses from '../helpers/addresses.json'\nimport readable from '../helpers/readable'\nimport { useParams } from \"react-router-dom\";\nimport { Card, Tooltip, Alert, Typography, Progress, Spin } from 'antd';\nimport axios from 'axios';\nimport { getPriceUniswapV3, queryFactoryForLPUniV3 } from '@thanpolas/uniswap-chain-queries'\nimport ImageGallery from 'react-image-gallery';\nconst images = [\n    {\n      original: 'https://picsum.photos/id/1018/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1018/250/150/',\n    },\n    {\n      original: 'https://picsum.photos/id/1015/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1015/250/150/',\n    },\n    {\n      original: 'https://picsum.photos/id/1019/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1019/250/150/',\n    },\n  ];\n\nconst erc20abi = [\n    // Read-Only Functions\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function decimals() view returns (uint8)\",\n    \"function symbol() view returns (string)\",\n\n    // Authenticated Functions\n    \"function transfer(address to, uint amount) returns (bool)\",\n\n    // Events\n    \"event Transfer(address indexed from, address indexed to, uint amount)\"\n];\n\nfunction Liquidity() {\n    const network = 'goerli'\n    const networkData = require(`../data/${network}`)\n    const { addressParam } = useParams();\n    const tokenData = require(`../data/${networkData.symbol}:${addressParam}`).default\n    const [data, setData] = useState([]);\n    const [zillowData, setZillowData] = useState([]);\n    const [tokenInfo, setTokenInfo] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const provider = ethers.getDefaultProvider(network, { alchemy: process.env.REACT_APP_ALCHEMY_KEY_GOERLI })\n    const stable = addresses[network].stable\n    const StableContract = new ethers.Contract( stable, erc20abi, provider )\n    const AssetContract = new ethers.Contract( addressParam, erc20abi, provider )\n    const getTokenInfo= useCallback(async () => {\n        const stableSymbol = await StableContract.symbol()\n        const assetSymbol = await AssetContract.symbol()\n        return [stableSymbol, assetSymbol]\n    })\n    const getData = useCallback(async () => {\n        const lpAddresses = await queryFactoryForLPUniV3(\n            addresses.uniswapFactory,\n            provider,\n            [stable, addressParam],\n        );\n        const newData = await Promise.all(lpAddresses.map(async (address) => \n            getPriceUniswapV3(address, provider, [18, 18])\n        ))\n        setLoading(false)\n        return newData\n    }, [stable,addressParam])\n\n    useEffect(() => {\n        setLoading(true)\n        async function dataFetch() { setData(await getData()) }\n        async function tokenFetch() { setTokenInfo(await getTokenInfo()) }\n        tokenFetch()\n        dataFetch()\n    }, [getData]);\n\n    const fetchZillowData = () => {\n        axios.get(`${tokenData.airbnbData}`)\n        .then(function (response) {\n            setZillowData(response.data[0])\n        })\n    }\n\n\n    return (\n        <div className=\"full-screen-center text-align-center\">\n            {loading\n                ? <Spin tip=\"loading\" size=\"large\" />\n                : <div className=\"m20\">\n                    <div className=\"m20\" />\n                    <Typography.Title level={2}>Asset Details</Typography.Title>\n                    <div className='text-medium text-gray'>\n                        <div className=\"flex-center w300 mAuto\">\n                            <ImageGallery \n                                showFullscreenButton={false}\n                                showPlayButton={false}\n                                originalWidth={200}\n                                renderRightNav = {(onClick, disabled) => (\n                                    <div \n                                    className=\"image-gallery-icon image-gallery-right-nav text-white bold txt-xl\"\n                                        onClick={onClick} \n                                        disabled={disabled}>â·</div>\n                                  )}\n                                renderLeftNav = {(onClick, disabled) => (\n                                    <div \n                                    className=\"image-gallery-icon image-gallery-left-nav text-white bold txt-xl\"\n                                        onClick={onClick} \n                                        disabled={disabled}>â</div>\n                                  )}\n                                items={tokenData.images.map(image=>{\n                                    return {\n                                        original:image,\n                                        thumbnail: image\n                                    }\n                                })} \n                            />\n                        </div>\n                        <Typography.Title level={4}>Pricing</Typography.Title>\n                        <Progress percent={100} success={{ percent: 60 }} showInfo={false} />\n                        <div className=\"flex-center\">\n                            <Tooltip title=\"LÂ£GT\" color=\"green\" open placement=\"left\">\n                                <Alert message=\"400,000\" type=\"success\" className=\"mr20\" />\n                            </Tooltip>\n                            <Tooltip title=\"ZILLOW \" color=\"blue\" open placement=\"right\">\n                                <Alert message=\"300,000\" type=\"info\" />\n                            </Tooltip> \n                        </div>\n                        {/* {readable(tokenData)} */}\n                        {readable(zillowData)}\n                    </div>\n                    <div className='flex word-break justify-content-center'>{data\n                    .filter(asset => Number(asset.token0Reserves) || Number(asset.token1Reserves))\n                    .map(asset =>\n                    <div key={asset.lpAddresses} >\n                            {/* <button onClick={fetchZillowData}>Zillow Call</button> */}\n                            <Card title={`${network} uniswap`} className=\"mt20\" >\n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    href={`https://app.uniswap.org/#/swap?inputCurrency=${stable}&outputCurrency=${addressParam}`}>\n                                    <button>{`${tokenInfo[0]} / ${tokenInfo[1]} â`}</button>\n                                </a>\n                                {readable(asset)}\n                            </Card>\n                        </div>\n                    )}</div>\n                </div>}\n\n        </div>\n    );\n}\n\nexport default Liquidity;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Networks from './views/Networks';\nimport Liquidity from './views/Liquidity';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/networks\" element={<Networks />} />\n        <Route path=\"/liquidity/:addressParam\" element={<Liquidity />} />\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"*\" element={<App />} />\n      </Routes>\n    </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}