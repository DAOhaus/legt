{"version":3,"sources":["App.js","views/Networks.js","views/Liquidity.js","reportWebVitals.js","index.js"],"names":["console","log","process","JSON","stringify","App","className","style","color","data-tf-popup","data-tf-size","data-tf-iframe-props","data-tf-medium","to","target","href","Networks","erc20abi","Liquidity","network","addressParam","useParams","useState","data","setData","tokenInfo","setTokenInfo","loading","setLoading","provider","ethers","getDefaultProvider","alchemy","stable","addresses","StableContract","Contract","AssetContract","getTokenInfo","useCallback","a","symbol","stableSymbol","assetSymbol","getData","queryFactoryForLPUniV3","uniswapFactory","lpAddresses","Promise","all","map","address","getPriceUniswapV3","newData","useEffect","tokenFetch","dataFetch","filter","asset","Number","token0Reserves","token1Reserves","title","rel","Object","entries","key","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.392c6e66.chunk.js","sourcesContent":["import './App.css';\nimport './shorthand.css';\nimport { Link } from \"react-router-dom\";\n\nconsole.log(`${process.env.REACT_APP_VERSION} ${JSON.stringify(process.env)}`)\n\nfunction App() {\n  return (\n    <div className=\"full-screen-center text-align-center\">\n      <div className=\"m20\">\n        L <span style={{color:\"red\"}}>£</span> G T\n        <br></br>\n        <p className='text-medium text-gray'>\n          legal governance tokens\n          <br></br>\n          defi protocol\n          collateralizing real world assets\n          <br></br>\n          <br></br>\n        </p>\n        <div className='text-medium text-gray'>\n          <div>handles real world cataclystic events</div>\n          <div>applies jurisdictional compliance</div>\n          <div>resolve on-chain disputes</div>\n          <div>new financial products</div>\n        </div>\n          <div className=\"m30\"></div>\n          <div className=\"mb60\">\n            <button data-tf-popup=\"FUQh12hl\" data-tf-size=\"70\" data-tf-iframe-props=\"title=Mint Questionaire\" data-tf-medium=\"snippet\" >Start Mint</button>\n            <div className=\"m10\"></div>\n            <div className=\"m10\"></div>\n            <Link to='https://testnets.opensea.io/LGTNFT'><button>NFT Examples</button></Link>\n            <div className=\"m10\"></div>\n            <Link to='/liquidity/0x79860c21220938a249a26ddc4616adf18efce5cf'><button>Liquidity Example</button></Link>\n            <div className=\"m10\"></div>\n            <a target=\"blank\" href=\"https://legt.gitbook.io\"><button>View Documentation</button></a>\n          </div>\n        <div className='text-medium text-gray-light'>v{process.env.REACT_APP_VERSION}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction Networks() {\n    return (\n        <div className=\"full-screen-center text-align-center\">\n            <div className=\"m20\">\n                Goerli\n                <div></div>\n                <div className='mt40 text-align-center text-medium text-gray'>\n                    <p><a href=\"https://goerli.etherscan.io/address/0x4Fd10Cb0969776029AefA8B5CDfba584C0778D97\">DAO</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0xf0a711a6cedc873ed978831bd76d0d647db3486006d6aa8509686962a48bd08a\">Asset</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0xc67b39f054c0eb67dafda95bdf1d69f3f3378895b6f9291b5910d3cd66649ac8\">Stable Token</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/token/0x9cefe40f0cf6fa1e18ca0507ce8f26ee6bec05df\">NFT Factory</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/tx/0x16014122ea63ddb438ba43586934905aad63c6c97f0c71400526543cdf11b6b1\">Liquidity Pool</a><a href=\"https://app.uniswap.org/#/pool/47647\">↗️</a></p>\n                    <p><a href=\"https://goerli.etherscan.io/address/0x1be39aef1192ac142698f0979031265b23b8fd58\">Distrobution Wrapper</a></p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Networks;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { ethers } from \"ethers\";\nimport addresses from '../helpers/addresses.json'\nimport { useParams } from \"react-router-dom\";\nimport { Card } from 'antd';\nimport { getPriceUniswapV3, queryFactoryForLPUniV3 } from '@thanpolas/uniswap-chain-queries'\nconst erc20abi = [\n    // Read-Only Functions\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function decimals() view returns (uint8)\",\n    \"function symbol() view returns (string)\",\n\n    // Authenticated Functions\n    \"function transfer(address to, uint amount) returns (bool)\",\n\n    // Events\n    \"event Transfer(address indexed from, address indexed to, uint amount)\"\n];\n\nfunction Liquidity() {\n    const network = 'goerli'\n    let { addressParam } = useParams();\n    const [data, setData] = useState([]);\n    const [tokenInfo, setTokenInfo] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const provider = ethers.getDefaultProvider(network, { alchemy: process.env.REACT_APP_ALCHEMY_KEY_GOERLI })\n    const stable = addresses[network].stable\n    const StableContract = new ethers.Contract( stable, erc20abi, provider )\n    const AssetContract = new ethers.Contract( addressParam, erc20abi, provider )\n    const getTokenInfo= useCallback(async () => {\n        const stableSymbol = await StableContract.symbol()\n        const assetSymbol = await AssetContract.symbol()\n        return [stableSymbol, assetSymbol]\n    })\n    const getData = useCallback(async () => {\n        const lpAddresses = await queryFactoryForLPUniV3(\n            addresses.uniswapFactory,\n            provider,\n            [stable, addressParam],\n        );\n        const newData = await Promise.all(lpAddresses.map(async (address) => \n            getPriceUniswapV3(address, provider, [18, 18])\n        ))\n        setLoading(false)\n        return newData\n    }, [stable,addressParam])\n\n    useEffect(() => {\n        setLoading(true)\n        async function dataFetch() { setData(await getData()) }\n        async function tokenFetch() { setTokenInfo(await getTokenInfo()) }\n        tokenFetch()\n        dataFetch()\n    }, [getData]);\n\n    return (\n        <div className=\"full-screen-center text-align-center\">\n            {loading\n                ? 'loading...'\n                : <div className=\"m20\">\n                    <div className=\"m20\" />\n                    <div className='flex word-break'>{data\n                    .filter(asset => Number(asset.token0Reserves) || Number(asset.token1Reserves))\n                    .map(asset =>\n                    <div key={asset.lpAddresses} >\n                            <Card title={`${network} uniswap`} >\n                                \n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    href={`https://app.uniswap.org/#/swap?inputCurrency=${stable}&outputCurrency=${addressParam}`}>\n                                    <button>{`${tokenInfo[0]} / ${tokenInfo[1]} ⇗`}</button>\n                                </a>\n                                {Object.entries(asset).map(([key, value]) =>\n                                    <p key={key}>{`${key}: ${value}`}</p>\n                                )}\n                            </Card>\n                        </div>\n                    )}</div>\n                    {/* <button onClick={async () => setData(await getData())}>refresh data</button> */}\n                </div>}\n\n        </div>\n    );\n}\n\nexport default Liquidity;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Networks from './views/Networks';\nimport Liquidity from './views/Liquidity';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/networks\" element={<Networks />} />\n        <Route path=\"/liquidity/:addressParam\" element={<Liquidity />} />\n        <Route path=\"/\" element={<App />} />\n      </Routes>\n    </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}